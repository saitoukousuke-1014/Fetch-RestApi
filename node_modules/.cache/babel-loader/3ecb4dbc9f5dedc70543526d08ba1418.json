{"ast":null,"code":"var _jsxFileName = \"/Users/kousuke.saitou/kadai_restapi1/src/ApiFetch.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction setPosts(data) {\n  throw new Error('Function not implemented.');\n}\n\nconst ApiFetch = () => {\n  _s();\n\n  //const [posts, setPosts] = useState([])\n  let posts;\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setPosts(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: post.title\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 244\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ApiFetch, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ApiFetch;\nexport default ApiFetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiFetch\");","map":{"version":3,"names":["React","useEffect","setPosts","data","Error","ApiFetch","posts","fetch","method","then","res","json","map","post","title","id"],"sources":["/Users/kousuke.saitou/kadai_restapi1/src/ApiFetch.tsx"],"sourcesContent":["import React, {useState, useEffect} from 'react'\n\n\nfunction setPosts(data: any) {\n    throw new Error('Function not implemented.');\n}\n\nconst ApiFetch = () => {\n\n    //const [posts, setPosts] = useState([])\n    let posts: any;\n\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/posts', {method: 'GET'})\n        .then(res => res.json())\n        .then(data => {\n            setPosts(data)\n        })\n    },[])\n\n    return (\n        <div>\n            <ul>\n                {\n                    posts.map((post: { id: React.Key | null | undefined; title: string | number | boolean | React.ReactElement<any, string | React.JSXElementConstructor<any>> | React.ReactFragment | React.ReactPortal | null | undefined; }) => <li key={post.id}>{post.title}</li>)\n                }\n            </ul>\n            \n        </div>\n    )\n}\n\nexport default ApiFetch\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAyBC,SAAzB,QAAyC,OAAzC;;;AAGA,SAASC,QAAT,CAAkBC,IAAlB,EAA6B;EACzB,MAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACH;;AAED,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAEnB;EACA,IAAIC,KAAJ;EAGAL,SAAS,CAAC,MAAM;IACZM,KAAK,CAAC,4CAAD,EAA+C;MAACC,MAAM,EAAE;IAAT,CAA/C,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMN,IAAI,IAAI;MACVD,QAAQ,CAACC,IAAD,CAAR;IACH,CAJD;EAKH,CANQ,EAMP,EANO,CAAT;EAQA,oBACI;IAAA,uBACI;MAAA,UAEQG,KAAK,CAACM,GAAN,CAAWC,IAAD,iBAAqN;QAAA,UAAmBA,IAAI,CAACC;MAAxB,GAASD,IAAI,CAACE,EAAd;QAAA;QAAA;QAAA;MAAA,QAA/N;IAFR;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH,CAxBD;;GAAMV,Q;;KAAAA,Q;AA0BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}